{
  "Test di unità": {
    "id_config": "TU#POS#",
    "skip_not_approved": false,
    "tests": [
      {
        "description": "Verificare che in un widget di tipo testo venga impostata in modo corretto la grandezza del font del testo",
        "implemented": true,
        "approved": true
      },
      {
        "description": "Verificare che all'instanziazione di un widget di tipo testo la grandezza del testo sia di default a 1em",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'interno di un widget di tipo testo venga impostata in corsivo la parte di testo richiesta",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'interno di un widget di tipo testo venga inserito un link cliccabile nel modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'interno di un widget di tipo testo i link cliccabili abbiano il colore corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'interno di un widget di tipo testo venga impostata in grassetto la parte di testo richiesta",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'interno di un widget di tipo testo venga impostato il colore del testo in modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'instanziazione di un widget di tipo testo il colore del testo sia di default a nero",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo immagine l'immagine venga agiunta in modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo immagine venga mostrato il messaggio di errore appropriato nel caso si inserisca un immagina non valida",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che un widget di tipo immagine venga impostata la dimensione del immagine da visualizzare in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che all'instanziazione di un widget di tipo immagine venga impostata la larghezza e l'altezza di default",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare un widget di tipo immagine venga visualizzato con le dimensioni corrette",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo bottone venga impostato il testo in modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che venga mostrarto in modo corretto il messaggio di errore se viene inserita una sequenza di caratteri non valida in un widget di tipo bottone",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che un widget di tipo bottone venga impostata la dimensione in modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'instanziazione di un widget di tipo bottone venga impostata la larghezza e l'altezza di default",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo bottone venga impostato il colore di sfondo in modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'instanziazione di un widget di tipo bottone venga impostato il colore di sfondo di default",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che un widget di tipo bottone venga visualizzato con dimensione, colore e testo correti",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo button vengano eseguiti gli eventi associati alla pressione",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo button vengano eseguiti gli eventi associati alla pressione pressione prolungata",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo button venga impostato in modo corretto la soglia per determinare che una pressione da parte del utente è di tipo: \"pressione prolungata\"",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che un un widget di tipo checklistitem venga cambiato in modo corretto la stato da \"cliccato\" a \"non cliccato\" e viceversa",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che all'instanziazione di un widget di tipo checklistitem venga impostato lo stato a \"non cliccato\"",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che un widget di tipo checklistitem venga visualizzato con lo stile di spunta e colore corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo checklistitem vengano associati gli eventi di pressione nel modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo checklistitem vengano associati gli eventi di pressione prolungata nel modo corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo checklistitem vengano eseguiti gli eventi associati alla pressione",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo checklistitem vengano eseguiti gli eventi associati alla pressione pressione prolungata",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo checklistitem venga impostato in modo corretto la soglia per determinare che una pressione da parte del utente è di tipo: \"pressione prolungata\"",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo list venga impostato correttamente il cambiamento dello stile",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un widget di tipo list che vengano aggiunti correttamente tutti gli elementi",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un layout verticale sia possibile aggiungere un elemento",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un layout verticale non sia possibile aggiungere se stesso",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un layout orizzontale sia possibile aggiungere un elemento",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che in un layout orizzontale non sia possibile aggiungere se stesso",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Verificare che il nome della lista della spesa venga impostato nel modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che all'instanziazione di una lista della spesa venga impostato il valore du default per il nome della lista",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che l'immagine della lista della spesa venga impostata in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che nel caso di un errore durante l'aggiunta di un prodotto alla lista della spesa venga mostrato uk mesaggio di errore corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che l'immagine del prodotto venga aggiunta in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la descrizione del prodotto venga aggiunta in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che le note del prodotto vengano aggiunte in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la quantità del prodotto venga aggiunta in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che alla creazione di un nuovo prodotto venga impostata la quantità di default",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che l'unità di misura relativa alla quantità del prodotto venga impostata in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che alla creazione di un nuovo prodotto venga impostata l'unità di misura di default",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la rimozione di un prodotto dalla lista avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la modifica del nome di un prodotto in una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la modifica della descrizione di un prodotto in una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la modifica del'immagine di un prodotto in una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la modifica delle note di un prodotto in una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la modifica della quantità di un prodotto in una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la modifica del unità di misura relativa alla quantità di un prodotto in una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che la pubblicazione di una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che l'inoltro di una lista della spesa avvenga in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Verificare che le interazioni con la lista della spesa siano coerenti con i permessi che ha l'utente",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Viene verificato che il codice html associato ad una qualsiasi widet sia valido",
        "implemented": false,
        "approved": false
      }
    ]
  },

  "Test di integrazione": {
    "id_config": "TI#POS#",
    "skip_not_approved": false,
    "tests": [
      {
        "description": "Si verifica che il metodo ButtonWidget::setText passi correttamente il testo al presenter il quale eventualmente lo formatterà e modificherà correttamente l'HTML e CSS",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ButtonWidget::setHeight passi correttamente il valore dell'altezza al presenter il quale modificherà correttamente l'HTML e CSS",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ButtonWidget::setWidth passi correttamente il valore della lareghezza al presenter modificherà correttamente l'HTML e CSS",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ButtonWidget::setBackgroundColor passi correttamente il colore dello sfondo del bottone al presenter il quale modificherà correttamente l'HTML e CSS",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ButtonWidget::setOnClickAction passi correttamente al presenter la funzione che verrà eseguita quanto viene premuto il pulsante",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ButtonWidget::setOnLongClickAction passi correttamente al presenter la funzione che verrà eseguita quanto viene mantenuto premuto il pulsante",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo TextWidget::setText passi correttamente al presenter il testo che verrà poi mostrato a video",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo TextWidget::setTextColor passi correttamente il colore del testo al presenter il quale modificherà correttamente l'HTML e CSS, presentandolo con il colore corrispondente",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo TextWidget::setFormatText passi il valore booleano (che rappresenta la scelta di formattare il testo) al presenter. Essp dovrà, poi, presentare il testo formattato seguendo la sintassi markdown oppure lasciarlo invariato in funzione al valore booleano",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo TextWidget::setUrlHighlightColor passi il valore del colore al presenter il quale dovrà presentare i link evidenziati oppure non evidenziati in funzione al colore scelto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo TextWidget::setTextSize passi la dimensione del testo del presenter il quale dovrà occuparsi di presentare il testo della dimensione impostata",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ChecklistItemWidget::setUseSelectionMark imposti la scelta di utilizzare un carattere o un colore come spunta passando correttamente per il Presenter",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ChecklistItemWidget::setSelectionColor passi al presenter il colore dello spunta il quale dovrà presentare la lista con lo stile corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ChecklistItemWidget::setSelectionCharacter passi al presenter un carattere per la spunta, e il presenter dovrà presentare la lista con lo stile corretto",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ListWidget::addItem passi al presenter il testo del elemento il quale dovrà presentare l'HTML con il nuovo elemento",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che la view passi al presenter il carattere con il quale mostrare gli indicatori della lista. Esso provvederà poi ad impostarli correttamente nell'HTML",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ImageWidget::setWidth passi correttamente al presenter il valore dell'altezza il quale aggiornerà la view",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ImageWidget::setHeight passi correttamente al presenter il valore della larghezza il quale aggiornerà la view",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo ImageWidget::setImage passi correttamente al presenter il path del'immagine che dovrà essere presentata nella view",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo VerticalLayoutView::renderView generi la view mostrando gli elementi uno sotto l'altro nel ordine in cui sono stati inseriti",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che il metodo HorizontalLayoutView::renderView generi la view mostrando gli elementi uno affinaco all'altro nel ordine in cui sono stati inseriti",
        "implemented": true,
        "approved": false
      },
      {
        "description": "Si verifica che RemoteItemViewPresenter riceva l'evento RemoveItemView::onItemRemovedClicked ed elimini l'elelemnto relativo dalla lista",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che RemoteItemViewPresenter rimuovendo un elemento dalla lista mantenga RemoveItemView in uno stato consistente agli elementi presenti",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che il ModifyListUseCase esegua le operazioni di aggiunta, rimmozione e aggiornamento dei dati trammite DatabaseSource in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che AddItemViewPresenter riceva l'evento AddItemView::onAddItemClicked ed aggiunga gli elementi",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShowPopupUseCase interagisca in modod corretto con l'interfaccia ChatSource",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che CreateListViewPresenter riceva l'evento CreateListView::onCreateListClicked e lo gestisca in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che CreateListViewPresenter interagisca con ShowPopupUseCase in modo corretto il quale dovrà mostrare l'opportuno popup",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShowPopupUseCase interagisca con ChatSource in modo corretto il quale dovà eseguire l'effetiva visualizzazione del popup e l'invio del messaggio",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che CreateListViewPresenter interagisca con ManageListUseCase aggiungendo una lista in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ManageListUseCase interagisca con DatabaseSource rimuovendo e aggiungendo una lista dal database in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che DeleteListViewPresenter riceva l'evento DeleteListView::onDeleteListClicked ed elimini l'emento selezionato dal utente",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che DeleteListViewPresenter interagisca con ManageListUseCase rimuovendo una lista in modo corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ForwardListViewPresenter riceva l'evento ForwardListView::onForwardClicked ed inizzi la procedura di inoltro trammite ForwardListUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ForwardListViewPresenter riceva l'evento ForwardListView::onForwardClicked ed inizzi la procedura di inoltro mostrando un popup trammite ShowPopupUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShowPopupUseCase interagisca in modo corretto con ChatSource al fine di mostrare il popup corretto",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ForwardListUseCase interagisca in modo corretto con ChatSource al fine di inoltrare la lista selezionata",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che InputListInfoViewPresenter riceva l'evento InputListInfoView::onSaveClicked il quale aggiornerà i dati",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che InputListInfoViewPresenter successivamente al evento InputListInfoView::onSaveClicked invochi il metodo InputListInfoView::emitOnSavedDataEvent",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ChangeListInfoViewPresenter riceva l'evento InputListInfoView::onSavedData e presenti i nuovi dati che dovranno essere visualizzati",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che GetListInfoUseCase esegua i fetch dei dati in modo corretto dal database trammite DatabaseSource",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ChangeListInfoViewPresenter interagisca in modo corretto con ModifyListUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ChangeListInfoViewPresenter interagisca in modo corretto con ShowPopupUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che InputInfoViewPresenter ricevà l'evento InputItemInfoView::onSaveClicked a seguito del'intenzione di salvare i dati da parte del utente",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifca che ModifyItemPresenter ricevà l'evento InputItemInfoView::onSavedItem a seguito del avvenuto salvataggio dei dati",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che InputInfoViewPresenter interagisca in modod corretto con GetItemInfoUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che GetItemInfoUseCase interagisca in modo corretto con DatabaseSource",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ModifyItemPresenter ricevà l'evento ModifyItemView::onClickModifyItem",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ModifyItemPresenter interagisca in modod corretto con ModifyListUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ModifyItemPresenter interagisca in modod corretto con ShowPopupUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ModifyListUseCase interagisca in modo corretto con DatabaseSource",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShowPopupUseCase interagisca in modo corretto con ChatSource",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithContactViewPresenter riceva l'evento ShareWithContactView::onClickShareWithContact",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithContactViewPresenter interagisca in modo corretto con ShareWithContactView",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithContactViewPresenter interagisca in modo corretto con ShareListUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareListUseCase interagisca in modo corretto con DatabaseSource",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithGroupViewPresenter riceva l'evento ShareWithGroupView::onClickShareWithGroup",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithGroupViewPresenter riceva l'evento ShareWithContactView::onClickShareWithContact",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithGroupViewPresenter interagisca in modo corretto con ShareWithContactView",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifica che ShareWithGroupViewPresenter interagosca in modo corretto con ShowPopupUseCase",
        "implemented": false,
        "approved": false
      },
      {
        "description": "Si verifca che ChatSource interagisca in modo corretto con Rocket.chat",
        "implemented": false,
        "approved": false
      }
    ]
  },

  "Test di sistema": {
    "id_config": "TS[type][importance]#POS#",
    "skip_not_approved": false,
    "tests": [
      {
        "description": "Viene verificato che sia possibile creare e aggiungere ad una bolla un widget per tipo, tra quelli presenti nell'SDK",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile creare e aggiungere ad una bolla un layout per tipo, tra quelli presenti nell'SDK",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile impostare le variabili di un widget testo formattato",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un widget testo formattato faccia visualizzare un messaggio d'errore in caso venga impostata una sua variabile in maniera errata",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile impostare le variabili di un widget immagine",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un widget immagine faccia visualizzare un messaggio d'errore in caso venga impostata una sua variabile in maniera errata",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile impostare le variabili di un widget bottone",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un widget bottone faccia visualizzare un messaggio d'errore in caso venga impostata una sua variabile in maniera errata",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile impostare le variabili di un widget checklistitem",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un widget checklistitem faccia visualizzare un messaggio d'errore in caso venga impostata una sua variabile in maniera errata",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile impostare le variabili di un widget lista",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un widget lista faccia visualizzare un messaggio d'errore in caso venga impostata una sua variabile in maniera errata",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile aggiungere un widget all'interno di un VerticalLayoutView",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile aggiungere un widget all'interno di un HorizzontalLayoutView",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile istanziare una bolla avviso e sia possibile utilizzare tutti i suoi metodi",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile istanziare una bolla markdown e sia possibile utilizzare tutti i suoi metodi",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile istanziare una bolla lista e sia possibile utilizzare tutti i suoi metodi",
        "implemented": true,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile creare una bolla \"lista della spesa\"",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Verificare che l'aggiunta di un nuovo prodotto alla lista della spesa venga eseguita correttamente",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verifica che sia possibile rimuovere un elemento ad una bolla \"lista della spesa\"",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verifica che sia possibile spuntare un elemento di una bolla \"lista della spesa\"",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verifica che sia possibile condividere una bolla \"lista della spesa\"",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk si installi correttamente in una istanza di Rocket.chat, della quale viene fatto hosting su Heroku",
        "implemented": false,
        "approved": false,
        "type": "V",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk funzioni con il browser chrome versione >= 56",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk funzioni con il browser safari versione >= 10",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk funzioni con il browser opera versione >= 43",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk funzioni con il browser firefox versione >= 45",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk funzioni con il browser microsoft edge versione >= 13",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      }
    ]
  },

  "Test di validazione": {
    "id_config": "TV[type][importance]#POS#",
    "skip_not_approved": false,
    "tests": [
      {
        "description": "Viene verificato che sia possibile scaricare l'sdk tramite il gestore dei pacchetti npm",
        "implemented": false,
        "approved": false,
        "type": "V",
        "importance": "O"
      },
      {
        "description": "Viene verificato che l'sdk sia utilizzabile dal applicazione di demo",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile istanziare tutti i widget che sono inclusi nel sdk",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile istanziare tutti i layout che sono inclusi nel sdk",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile istanziare tutte le bolle che sono incluse nel sdk",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che sia possibile comporre una bolla personalizzata mediante widget e layout",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un generico utente possa creare un lista della spesa e pubblicarla al'interno di un canale Rockt.chat",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che un generico utente possa creare un lista della spesa e pubblicarla ad un singolo utente avente un account sul istanza Rocket.chat su cui è installata l'sdk",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che se un utente ha i permessi per interagire con una bolla quest'ultimo sia in grado di visualizzare gli elementi e di spuntarli",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che se un utente inoltra una lista della spesa quest'ultima venga inoltrata in forma testuale bloccando quindi ogni forma di interazione con l'utente",
        "implemented": false,
        "approved": false,
        "type": "F",
        "importance": "O"
      },
      {
        "description": "Viene verificato che tutti i file che contengono codice scritto in javascript o coffescript passino i test di linting",
        "implemented": false,
        "approved": false,
        "type": "V",
        "importance": "O"
      }
    ]
  }
}
